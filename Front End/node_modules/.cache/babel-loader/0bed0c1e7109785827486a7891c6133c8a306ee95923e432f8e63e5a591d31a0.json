{"ast":null,"code":"var _jsxFileName = \"D:\\\\node.js\\\\todo\\\\src\\\\Components\\\\ToDo\\\\ToDoComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { retrieveTodoForIdApi } from './api/TodoApiservice';\nimport { useAuth } from './security/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoCompoent() {\n  _s();\n  const {\n    id\n  } = useparams();\n  const AuthContext = useAuth();\n  const [todo, settodo] = useState();\n  function getToDo(id) {\n    retrieveTodoForIdApi(AuthContext.username, id).then(response => {\n      console.log(response.data);\n      settodo(response.data);\n    }).catch(error => console.log(error));\n  }\n  console.log(id);\n  // useEffect(getToDo(id), [id])\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoCompoent, \"cmMGwmbQzwfx7TXyMgcPMoW/io0=\", false, function () {\n  return [useAuth];\n});\n_c = ToDoCompoent;\nexport default ToDoCompoent;\nvar _c;\n$RefreshReg$(_c, \"ToDoCompoent\");","map":{"version":3,"names":["useEffect","useState","retrieveTodoForIdApi","useAuth","jsxDEV","_jsxDEV","ToDoCompoent","_s","id","useparams","AuthContext","todo","settodo","getToDo","username","then","response","console","log","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/node.js/todo/src/Components/ToDo/ToDoComponent.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { retrieveTodoForIdApi } from './api/TodoApiservice'\r\nimport { useAuth } from './security/AuthContext'\r\n\r\nfunction ToDoCompoent()\r\n {\r\n    const {id} = useparams()\r\n    const AuthContext = useAuth()\r\n    const [todo, settodo] = useState()\r\n    function getToDo(id)\r\n    {\r\n        retrieveTodoForIdApi(AuthContext.username,id)\r\n        .then( \r\n                response => \r\n                    { \r\n                        console.log(response.data)\r\n                        settodo(response.data)\r\n                    }\r\n             )\r\n        .catch( error => console.log(error))\r\n\r\n    }\r\n    console.log(id)\r\n    // useEffect(getToDo(id), [id])\r\n    return(\r\n        <div className=\"container\">\r\n            <h1>To Do details</h1>\r\n            <div>\r\n                {/* <h3>Description : ${todo.description}</h3>1 */}\r\n            </div>\r\n        </div>\r\n    )\r\n }\r\n export default ToDoCompoent"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,SAASC,OAAO,QAAQ,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EACpB;EAAAC,EAAA;EACG,MAAM;IAACC;EAAE,CAAC,GAAGC,SAAS,CAAC,CAAC;EACxB,MAAMC,WAAW,GAAGP,OAAO,CAAC,CAAC;EAC7B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAClC,SAASY,OAAOA,CAACL,EAAE,EACnB;IACIN,oBAAoB,CAACQ,WAAW,CAACI,QAAQ,EAACN,EAAE,CAAC,CAC5CO,IAAI,CACGC,QAAQ,IACJ;MACIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BP,OAAO,CAACI,QAAQ,CAACG,IAAI,CAAC;IAC1B,CACP,CAAC,CACLC,KAAK,CAAEC,KAAK,IAAIJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC,CAAC;EAExC;EACAJ,OAAO,CAACC,GAAG,CAACV,EAAE,CAAC;EACf;EACA,oBACIH,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBlB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb;AAACpB,EAAA,CA5BOD,YAAY;EAAA,QAGGH,OAAO;AAAA;AAAAyB,EAAA,GAHtBtB,YAAY;AA6BpB,eAAeA,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}