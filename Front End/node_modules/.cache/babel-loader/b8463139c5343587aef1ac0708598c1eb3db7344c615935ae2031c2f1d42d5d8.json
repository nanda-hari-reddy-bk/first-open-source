{"ast":null,"code":"var _jsxFileName = \"D:\\\\node.js\\\\todo\\\\src\\\\Components\\\\ToDo\\\\security\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { authenticateJWTApi } from \"../api/AuthenticationApi\";\nimport { apiClient } from \"../api/BaseUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  // const [number,setNumber] = useState(10)\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [token, setToken] = useState(null);\n\n  // async function logIn(username, password)\n  // {\n  //     const baToken = 'Basic ' +  window.btoa(username + ':' + password)\n  //     try\n  //     {\n  //         const response = await authenticateApi(baToken)\n  //         if(response.status==200)\n  //         {\n  //             setIsAuthenticated(true)\n  //             setUsername(username)\n  //             setToken(baToken)\n  //             apiClient.interceptors.request.use( (config) => \n  //                                                             {\n  //                                                                 config.headers.Authorization=baToken\n  //                                                                 return config\n  //                                                             }\n  //                                               )\n  //             return true\n  //         }\n  //         else\n  //         {\n  //             logOut()       // just to remove duplicate code\n  //             return false\n  //         }\n  //     }\n  //     catch\n  //     {\n  //         logOut()\n  //         return false\n  //     }\n\n  // }\n\n  async function logIn(username, password) {\n    try {\n      const response = await authenticateJWTApi(username, password);\n      if (response.status == 200) {\n        const jwtToken = 'Bearer ' + response.data.token;\n        setIsAuthenticated(true);\n        setUsername(username);\n        setToken(jwtToken);\n        console.log(jwtToken);\n        apiClient.interceptors.request.use(config => {\n          config.headers.Authorization = jwtToken;\n          return config;\n        });\n        return true;\n      } else {\n        logOut(); // just to remove duplicate code\n        return false;\n      }\n    } catch {\n      logOut();\n      return false;\n    }\n  }\n  function logOut() {\n    setIsAuthenticated(false);\n    setUsername(null);\n    setToken(null);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      logIn,\n      logOut,\n      username,\n      token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"Wn1PhaPiXLNtyW2AbFOo/bgRy6A=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","authenticateJWTApi","apiClient","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","username","setUsername","token","setToken","logIn","password","response","status","jwtToken","data","console","log","interceptors","request","use","config","headers","Authorization","logOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/node.js/todo/src/Components/ToDo/security/AuthContext.js"],"sourcesContent":["import {createContext, useContext, useState } from \"react\"\r\nimport { authenticateJWTApi } from \"../api/AuthenticationApi\"\r\nimport { apiClient } from \"../api/BaseUrl\"\r\n\r\nconst AuthContext = createContext()\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\nexport default function AuthProvider({ children })\r\n{\r\n    // const [number,setNumber] = useState(10)\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const [username, setUsername] = useState(null)\r\n    const [token, setToken] = useState(null)\r\n    \r\n\r\n    // async function logIn(username, password)\r\n    // {\r\n    //     const baToken = 'Basic ' +  window.btoa(username + ':' + password)\r\n    //     try\r\n    //     {\r\n    //         const response = await authenticateApi(baToken)\r\n    //         if(response.status==200)\r\n    //         {\r\n    //             setIsAuthenticated(true)\r\n    //             setUsername(username)\r\n    //             setToken(baToken)\r\n    //             apiClient.interceptors.request.use( (config) => \r\n    //                                                             {\r\n    //                                                                 config.headers.Authorization=baToken\r\n    //                                                                 return config\r\n    //                                                             }\r\n    //                                               )\r\n    //             return true\r\n    //         }\r\n    //         else\r\n    //         {\r\n    //             logOut()       // just to remove duplicate code\r\n    //             return false\r\n    //         }\r\n    //     }\r\n    //     catch\r\n    //     {\r\n    //         logOut()\r\n    //         return false\r\n    //     }\r\n\r\n    // }\r\n\r\n    async function logIn(username, password)\r\n    {\r\n        try\r\n        {\r\n            const response = await authenticateJWTApi(username, password)\r\n            if(response.status==200)\r\n            {\r\n                const jwtToken = 'Bearer ' +  response.data.token\r\n                setIsAuthenticated(true)\r\n                setUsername(username)\r\n                setToken(jwtToken)\r\n                console.log(jwtToken)\r\n                apiClient.interceptors.request.use( (config) => \r\n                                                                {\r\n                                                                    config.headers.Authorization=jwtToken\r\n                                                                    return config\r\n                                                                }\r\n                                                  )\r\n                return true\r\n            }\r\n            else\r\n            {\r\n                logOut()    // just to remove duplicate code\r\n                return false\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            logOut()\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    function logOut()\r\n    {\r\n        setIsAuthenticated(false)\r\n        setUsername(null)\r\n        setToken(null)\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={ {isAuthenticated, setIsAuthenticated, logIn, logOut, username, token}}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAAQA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,SAAS,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AACnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,WAAW,CAAC;AAAA;AAAAE,EAAA,CAAvCD,OAAO;AAEpB,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EACjD;EAAAC,GAAA;EACI;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAGxC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,eAAeiB,KAAKA,CAACJ,QAAQ,EAAEK,QAAQ,EACvC;IACI,IACA;MACI,MAAMC,QAAQ,GAAG,MAAMlB,kBAAkB,CAACY,QAAQ,EAAEK,QAAQ,CAAC;MAC7D,IAAGC,QAAQ,CAACC,MAAM,IAAE,GAAG,EACvB;QACI,MAAMC,QAAQ,GAAG,SAAS,GAAIF,QAAQ,CAACG,IAAI,CAACP,KAAK;QACjDH,kBAAkB,CAAC,IAAI,CAAC;QACxBE,WAAW,CAACD,QAAQ,CAAC;QACrBG,QAAQ,CAACK,QAAQ,CAAC;QAClBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACrBnB,SAAS,CAACuB,YAAY,CAACC,OAAO,CAACC,GAAG,CAAGC,MAAM,IACK;UACIA,MAAM,CAACC,OAAO,CAACC,aAAa,GAACT,QAAQ;UACrC,OAAOO,MAAM;QACjB,CACd,CAAC;QACnC,OAAO,IAAI;MACf,CAAC,MAED;QACIG,MAAM,CAAC,CAAC,EAAI;QACZ,OAAO,KAAK;MAChB;IACJ,CAAC,CACD,MACA;MACIA,MAAM,CAAC,CAAC;MACR,OAAO,KAAK;IAChB;EAEJ;EAEA,SAASA,MAAMA,CAAA,EACf;IACInB,kBAAkB,CAAC,KAAK,CAAC;IACzBE,WAAW,CAAC,IAAI,CAAC;IACjBE,QAAQ,CAAC,IAAI,CAAC;EAClB;EAEA,oBACIZ,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAG;MAACtB,eAAe;MAAEC,kBAAkB;MAAEK,KAAK;MAAEc,MAAM;MAAElB,QAAQ;MAAEE;IAAK,CAAE;IAAAN,QAAA,EAC9FA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE/B;AAAC3B,GAAA,CAvFuBF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}