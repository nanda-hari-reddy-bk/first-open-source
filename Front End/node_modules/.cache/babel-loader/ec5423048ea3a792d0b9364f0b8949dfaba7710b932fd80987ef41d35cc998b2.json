{"ast":null,"code":"var _jsxFileName = \"D:\\\\node.js\\\\todo\\\\src\\\\Components\\\\ToDo\\\\security\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { authenticateApi } from \"../api/TodoApiservice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider({\n  children\n}) {\n  _s2();\n  // const [number,setNumber] = useState(10)\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n\n  // setInterval(() => {setNumber(number+10)}, 1000);\n\n  function logIn(username, password) {\n    if (username === 'Nanda' && password === 'WASDskal') {\n      setIsAuthenticated(true);\n      setUsername(username);\n      return true;\n    } else {\n      setIsAuthenticated(false);\n      setUsername(null);\n      return false;\n    }\n  }\n  function logIn(username, password) {\n    const baToken = 'Basic ' + window.btoa(username + ':' + password);\n    authenticateApi(baToken).then;\n    if (username === 'Nanda' && password === 'WASDskal') {\n      setIsAuthenticated(true);\n      setUsername(username);\n      return true;\n    } else {\n      setIsAuthenticated(false);\n      setUsername(null);\n      return false;\n    }\n  }\n  function logOut() {\n    setIsAuthenticated(false);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated,\n      logIn,\n      logOut,\n      username\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"laYTpZuX2xbU1DFqqsUVzF6NNqo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","authenticateApi","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","username","setUsername","logIn","password","baToken","window","btoa","then","logOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/node.js/todo/src/Components/ToDo/security/AuthContext.js"],"sourcesContent":["import {createContext, useContext, useState } from \"react\"\r\nimport { authenticateApi } from \"../api/TodoApiservice\"\r\n\r\nconst AuthContext = createContext()\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\nexport default function AuthProvider({ children })\r\n{\r\n    // const [number,setNumber] = useState(10)\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const [username, setUsername] = useState(null)\r\n\r\n    // setInterval(() => {setNumber(number+10)}, 1000);\r\n\r\n    function logIn(username, password)\r\n    {\r\n        if(username==='Nanda' && password==='WASDskal')\r\n            {\r\n                setIsAuthenticated(true)\r\n                setUsername(username)\r\n                return true\r\n                \r\n            }\r\n            else\r\n            {\r\n                setIsAuthenticated(false)\r\n                setUsername(null)\r\n                return false\r\n            }\r\n    }\r\n    function logIn(username, password)\r\n    {\r\n        const baToken = 'Basic ' +  window.btoa(username + ':' + password)\r\n        authenticateApi(baToken)\r\n        .then\r\n        if(username==='Nanda' && password==='WASDskal')\r\n            {\r\n                setIsAuthenticated(true)\r\n                setUsername(username)\r\n                return true\r\n                \r\n            }\r\n            else\r\n            {\r\n                setIsAuthenticated(false)\r\n                setUsername(null)\r\n                return false\r\n            }\r\n    }\r\n\r\n    function logOut()\r\n    {\r\n        setIsAuthenticated(false)\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={ {isAuthenticated, setIsAuthenticated, logIn, logOut, username}}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAAQA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AACnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAAAE,EAAA,CAAvCD,OAAO;AAEpB,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EACjD;EAAAC,GAAA;EACI;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE9C;;EAEA,SAASc,KAAKA,CAACF,QAAQ,EAAEG,QAAQ,EACjC;IACI,IAAGH,QAAQ,KAAG,OAAO,IAAIG,QAAQ,KAAG,UAAU,EAC1C;MACIJ,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAACD,QAAQ,CAAC;MACrB,OAAO,IAAI;IAEf,CAAC,MAED;MACID,kBAAkB,CAAC,KAAK,CAAC;MACzBE,WAAW,CAAC,IAAI,CAAC;MACjB,OAAO,KAAK;IAChB;EACR;EACA,SAASC,KAAKA,CAACF,QAAQ,EAAEG,QAAQ,EACjC;IACI,MAAMC,OAAO,GAAG,QAAQ,GAAIC,MAAM,CAACC,IAAI,CAACN,QAAQ,GAAG,GAAG,GAAGG,QAAQ,CAAC;IAClEd,eAAe,CAACe,OAAO,CAAC,CACvBG,IAAI;IACL,IAAGP,QAAQ,KAAG,OAAO,IAAIG,QAAQ,KAAG,UAAU,EAC1C;MACIJ,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAACD,QAAQ,CAAC;MACrB,OAAO,IAAI;IAEf,CAAC,MAED;MACID,kBAAkB,CAAC,KAAK,CAAC;MACzBE,WAAW,CAAC,IAAI,CAAC;MACjB,OAAO,KAAK;IAChB;EACR;EAEA,SAASO,MAAMA,CAAA,EACf;IACIT,kBAAkB,CAAC,KAAK,CAAC;EAC7B;EAEA,oBACIR,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAG;MAACZ,eAAe;MAAEC,kBAAkB;MAAEG,KAAK;MAAEM,MAAM;MAAER;IAAQ,CAAE;IAAAJ,QAAA,EACvFA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE/B;AAACjB,GAAA,CAtDuBF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}