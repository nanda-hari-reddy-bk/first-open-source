{"ast":null,"code":"var _jsxFileName = \"D:\\\\node.js\\\\todo\\\\src\\\\Components\\\\Counter\\\\Counter.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Counter.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Counter() {\n  let tatalCount = 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: tatalCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Count, {\n      by: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Count, {\n      by: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Count, {\n      by: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n// function TotalCount()\n// {\n//     tatalCount+=\n// }\n_c = Counter;\nfunction Count({\n  by\n}) {\n  _s();\n  let [currentCount, setCount] = useState(0);\n  function increment1() {\n    setCount(currentCount + by);\n  }\n  function decrement1() {\n    if (currentCount <= 1) currentCount = 0;\n    setCount(currentCount - by);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"count\",\n      children: currentCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"decrement\",\n        onClick: decrement1,\n        children: [\"-\", by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"increment\",\n        onClick: increment1,\n        children: [\"+\", by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n}\n_s(Count, \"5yf2Li6dDl8UwmcXeQ7GV0fvHkw=\");\n_c2 = Count;\nvar _c, _c2;\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Count\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","tatalCount","children","fileName","_jsxFileName","lineNumber","columnNumber","Count","by","_c","_s","currentCount","setCount","increment1","decrement1","className","onClick","_c2","$RefreshReg$"],"sources":["D:/node.js/todo/src/Components/Counter/Counter.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport './Counter.css'\r\n\r\nexport default function Counter()\r\n{\r\n    let tatalCount=0\r\n    return(\r\n        <>\r\n            <div>{tatalCount}</div>\r\n            <Count by={1}/>\r\n            <Count by={3}/>\r\n            <Count by={5}/>\r\n        </>\r\n    )\r\n}\r\n\r\n// function TotalCount()\r\n// {\r\n//     tatalCount+=\r\n// }\r\n\r\nfunction Count({by})\r\n{\r\n\r\n    let [currentCount, setCount] = useState(0)\r\n    function increment1()\r\n    {\r\n        setCount(currentCount + by)\r\n    }\r\n\r\n    function decrement1()\r\n    {\r\n        if(currentCount<=1) currentCount=0\r\n        setCount(currentCount - by)\r\n    }\r\n    return(<div className=\"counter\">\r\n                <span className=\"count\">{currentCount}</span>\r\n                <div>\r\n                    <button className=\"decrement\" onClick={decrement1}>-{by}</button>\r\n                    <button className=\"increment\" onClick={increment1}>+{by}</button>\r\n                </div>\r\n          </div>\r\n    )\r\n\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,eAAe,SAASC,OAAOA,CAAA,EAC/B;EACI,IAAIC,UAAU,GAAC,CAAC;EAChB,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACIL,OAAA;MAAAK,QAAA,EAAMD;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvBT,OAAA,CAACU,KAAK;MAACC,EAAE,EAAE;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACfT,OAAA,CAACU,KAAK;MAACC,EAAE,EAAE;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACfT,OAAA,CAACU,KAAK;MAACC,EAAE,EAAE;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACjB,CAAC;AAEX;;AAEA;AACA;AACA;AACA;AAAAG,EAAA,GAhBwBT,OAAO;AAkB/B,SAASO,KAAKA,CAAC;EAACC;AAAE,CAAC,EACnB;EAAAE,EAAA;EAEI,IAAI,CAACC,YAAY,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC1C,SAASkB,UAAUA,CAAA,EACnB;IACID,QAAQ,CAACD,YAAY,GAAGH,EAAE,CAAC;EAC/B;EAEA,SAASM,UAAUA,CAAA,EACnB;IACI,IAAGH,YAAY,IAAE,CAAC,EAAEA,YAAY,GAAC,CAAC;IAClCC,QAAQ,CAACD,YAAY,GAAGH,EAAE,CAAC;EAC/B;EACA,oBAAOX,OAAA;IAAKkB,SAAS,EAAC,SAAS;IAAAb,QAAA,gBACnBL,OAAA;MAAMkB,SAAS,EAAC,OAAO;MAAAb,QAAA,EAAES;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC7CT,OAAA;MAAAK,QAAA,gBACIL,OAAA;QAAQkB,SAAS,EAAC,WAAW;QAACC,OAAO,EAAEF,UAAW;QAAAZ,QAAA,GAAC,GAAC,EAACM,EAAE;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACjET,OAAA;QAAQkB,SAAS,EAAC,WAAW;QAACC,OAAO,EAAEH,UAAW;QAAAX,QAAA,GAAC,GAAC,EAACM,EAAE;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGhB;AAACI,EAAA,CAvBQH,KAAK;AAAAU,GAAA,GAALV,KAAK;AAAA,IAAAE,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}